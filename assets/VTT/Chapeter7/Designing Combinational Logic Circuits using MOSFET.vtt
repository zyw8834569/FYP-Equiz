WEBVTT

1
00:00:01.010 --> 00:00:03.360
today we will talk about the designing

2
00:00:03.360 --> 00:00:05.640
of combinational logic circuits we will

3
00:00:05.640 --> 00:00:07.710
try to differentiate between static CMOS

4
00:00:07.710 --> 00:00:10.170
circuits and dynamic CMOS circuits

5
00:00:10.170 --> 00:00:12.330
I am dr. Imran Khan for more videos and

6
00:00:12.330 --> 00:00:14.519
technology updates please subscribe our

7
00:00:14.519 --> 00:00:16.440
channel if you have any question related

8
00:00:16.440 --> 00:00:18.359
to our video please don't hesitate to

9
00:00:18.359 --> 00:00:20.600
contact me

10
00:00:20.600 --> 00:00:22.710
combination of verses sequential logic

11
00:00:22.710 --> 00:00:26.220
in combinational logic circuits output

12
00:00:26.220 --> 00:00:28.529
is dependent only on the previous inputs

13
00:00:28.529 --> 00:00:30.539
output is the function of previous

14
00:00:30.539 --> 00:00:33.180
inputs only while in the sequential

15
00:00:33.180 --> 00:00:36.540
logic circuit output is dependent not

16
00:00:36.540 --> 00:00:39.000
only on the previous inputs but also the

17
00:00:39.000 --> 00:00:44.520
states of energy storage elements so the

18
00:00:44.520 --> 00:00:47.600
output is the function of inputs and

19
00:00:47.600 --> 00:00:52.050
previous inputs these previous inputs

20
00:00:52.050 --> 00:00:57.480
are the states of these state storage

21
00:00:57.480 --> 00:01:00.809
elements like flip-flop latches and

22
00:01:00.809 --> 00:01:03.449
registers so in sequential logic

23
00:01:03.449 --> 00:01:08.030
circuits the state storage elements like

24
00:01:08.030 --> 00:01:11.100
flip-flop latches and registers are

25
00:01:11.100 --> 00:01:17.670
involved static CMOS circuits at every

26
00:01:17.670 --> 00:01:21.689
point in time each gate gate output is

27
00:01:21.689 --> 00:01:24.780
connected to either VDD or VSS via a law

28
00:01:24.780 --> 00:01:28.799
resistor path the outputs of gate

29
00:01:28.799 --> 00:01:30.840
assumes all the time the value of

30
00:01:30.840 --> 00:01:32.900
boolean function implemented by the

31
00:01:32.900 --> 00:01:35.189
circuit is Norrell once again the

32
00:01:35.189 --> 00:01:37.140
transient effect during switching

33
00:01:37.140 --> 00:01:42.770
periods in static CMOS circuits either

34
00:01:42.770 --> 00:01:46.590
there is no or negligible power

35
00:01:46.590 --> 00:01:49.710
consumption in static CMOS circuits

36
00:01:49.710 --> 00:01:53.700
there are large noise margins to

37
00:01:53.700 --> 00:01:56.939
implement n number of inputs in static

38
00:01:56.939 --> 00:01:59.369
CMOS circuits we need to n number of

39
00:01:59.369 --> 00:02:01.100
transistors suppose if we have two

40
00:02:01.100 --> 00:02:03.750
inputs we will require four transistor

41
00:02:03.750 --> 00:02:06.840
to implement this function and suppose

42
00:02:06.840 --> 00:02:09.929
we have five inputs we will require 10

43
00:02:09.929 --> 00:02:11.569
transistor to implement

44
00:02:11.569 --> 00:02:15.709
the function so this is the standard

45
00:02:15.709 --> 00:02:18.950
procedure to implement static compliment

46
00:02:18.950 --> 00:02:21.500
to receive all circuits so this P 1 is

47
00:02:21.500 --> 00:02:24.319
the pull-up network PD and his pulldown

48
00:02:24.319 --> 00:02:28.250
network so these are inputs and here is

49
00:02:28.250 --> 00:02:31.760
the output this is VDD and this is

50
00:02:31.760 --> 00:02:32.510
ground

51
00:02:32.510 --> 00:02:35.599
so in pull-up network we will use p MOS

52
00:02:35.599 --> 00:02:38.329
transistors only in pulldown network we

53
00:02:38.329 --> 00:02:41.480
will use n MOS transistors only pull-up

54
00:02:41.480 --> 00:02:43.340
network and pulldown network are the

55
00:02:43.340 --> 00:02:50.720
dual logic networks so in pull-up

56
00:02:50.720 --> 00:02:53.989
network we will use p MOS transistors

57
00:02:53.989 --> 00:02:57.049
only so here you can see this is the

58
00:02:57.049 --> 00:02:59.060
pull-up network and we have connected

59
00:02:59.060 --> 00:03:04.659
this p MOS transistor with with VT d and

60
00:03:04.659 --> 00:03:08.359
this p MOS transistor is connecting VDD

61
00:03:08.359 --> 00:03:12.919
to this output capacitor C L so when we

62
00:03:12.919 --> 00:03:15.680
apply low gate voltage this transistor

63
00:03:15.680 --> 00:03:17.750
will turn on and it will connect this

64
00:03:17.750 --> 00:03:21.590
VDD to this output capacitor and it will

65
00:03:21.590 --> 00:03:23.900
charge that this output capacitor from 0

66
00:03:23.900 --> 00:03:28.280
to VDD and suppose if we connect n MOS

67
00:03:28.280 --> 00:03:33.069
transistor in the pole op network then

68
00:03:33.069 --> 00:03:36.079
what will happen it will charge the

69
00:03:36.079 --> 00:03:40.220
output capacitor from VDD to VDD minus V

70
00:03:40.220 --> 00:03:45.440
from 0 to VDD minus VT 10 so you can see

71
00:03:45.440 --> 00:03:49.099
that there is the voltage drop of 1 ppm

72
00:03:49.099 --> 00:03:51.829
so this VT n is the threshold voltage

73
00:03:51.829 --> 00:03:55.819
for N Mo's transistor so that's why we

74
00:03:55.819 --> 00:03:58.250
use P Mo's transistor only in the

75
00:03:58.250 --> 00:04:01.729
pull-up network similarly in the

76
00:04:01.729 --> 00:04:04.069
pulldown network we use n Mo's

77
00:04:04.069 --> 00:04:11.479
transistors so you can see so when we

78
00:04:11.479 --> 00:04:14.000
connect

79
00:04:14.000 --> 00:04:18.259
this gate voltage too high signal this

80
00:04:18.259 --> 00:04:22.039
NMOS transistor will turn on and it will

81
00:04:22.039 --> 00:04:24.410
discharge this output capacitor from VDD

82
00:04:24.410 --> 00:04:28.610
to 0 but when we will connect this PMO's

83
00:04:28.610 --> 00:04:33.820
transistor so you can see still 1

84
00:04:33.820 --> 00:04:36.229
threshold voltage will left in this

85
00:04:36.229 --> 00:04:41.470
capacitor so these P Mo's transistors

86
00:04:41.470 --> 00:04:46.639
pause strong ones and weak zeros and n

87
00:04:46.639 --> 00:04:51.680
Mo's transistors pause strong zeros and

88
00:04:51.680 --> 00:04:54.500
weak ones so this is the reason that we

89
00:04:54.500 --> 00:04:57.110
use P Mo's transistor in the pull-up

90
00:04:57.110 --> 00:04:59.599
network and n MOS transistors in the

91
00:04:59.599 --> 00:05:02.840
pulldown network so here is the C switch

92
00:05:02.840 --> 00:05:09.620
we can use we can use C switch to that

93
00:05:09.620 --> 00:05:13.280
strong 0 and strong one at the same time

94
00:05:13.280 --> 00:05:15.740
so here you can see this is the block

95
00:05:15.740 --> 00:05:17.960
level diagram and this is the circuit

96
00:05:17.960 --> 00:05:23.270
level diagram of a C switch so in this

97
00:05:23.270 --> 00:05:25.190
diagram we have connected a P MOS

98
00:05:25.190 --> 00:05:27.380
transistor and n Mo's transistor to

99
00:05:27.380 --> 00:05:31.099
implement our C switch the CC switch can

100
00:05:31.099 --> 00:05:35.479
pause good 0 or good one at the same

101
00:05:35.479 --> 00:05:40.340
time so let's discuss about the

102
00:05:40.340 --> 00:05:42.970
implementation of this complex function

103
00:05:42.970 --> 00:05:46.099
so here you can see this is the output

104
00:05:46.099 --> 00:05:50.000
and how we want to implement this

105
00:05:50.000 --> 00:05:53.720
function a b + C D Prime so first of all

106
00:05:53.720 --> 00:05:55.909
we will start construction of our

107
00:05:55.909 --> 00:05:59.330
pulldown network a B or in series so

108
00:05:59.330 --> 00:06:00.800
here you can see in the pulldown network

109
00:06:00.800 --> 00:06:03.919
they are in series similarly C and D are

110
00:06:03.919 --> 00:06:06.650
in series so you can see C and D are in

111
00:06:06.650 --> 00:06:09.770
series and a B combination and CD

112
00:06:09.770 --> 00:06:12.409
combination they are in parallel to each

113
00:06:12.409 --> 00:06:15.830
other so you can see a B and C D

114
00:06:15.830 --> 00:06:18.770
combination is parallel to each other in

115
00:06:18.770 --> 00:06:21.440
the pulldown network so in the pulldown

116
00:06:21.440 --> 00:06:23.419
network we have used only n Mo's

117
00:06:23.419 --> 00:06:24.320
transistors

118
00:06:24.320 --> 00:06:29.180
so similarly in the pull-up Network this

119
00:06:29.180 --> 00:06:32.870
a a B bar in series in pulldown network

120
00:06:32.870 --> 00:06:35.360
they will come in parallel so here you

121
00:06:35.360 --> 00:06:38.150
can see a and B are in parallel but with

122
00:06:38.150 --> 00:06:40.640
P Mo's transistors similarly C and D

123
00:06:40.640 --> 00:06:44.420
were in series in pulldown network and

124
00:06:44.420 --> 00:06:46.400
in pull-up Network they will come in

125
00:06:46.400 --> 00:06:48.650
parallel so here you can see they're in

126
00:06:48.650 --> 00:06:52.610
parallel so similarly this whole

127
00:06:52.610 --> 00:06:57.860
combination is in series this a B and C

128
00:06:57.860 --> 00:07:00.530
D now they are in series in the pull-up

129
00:07:00.530 --> 00:07:03.170
network so here you can connect this VD

130
00:07:03.170 --> 00:07:06.860
D and here you can connect the ground so

131
00:07:06.860 --> 00:07:10.400
here you can get the output so this is

132
00:07:10.400 --> 00:07:12.920
the standard procedure of implementation

133
00:07:12.920 --> 00:07:17.510
of any complex combinational circuit so

134
00:07:17.510 --> 00:07:19.820
this is the transistor level diagram and

135
00:07:19.820 --> 00:07:24.110
this is the block level diagram so let

136
00:07:24.110 --> 00:07:26.540
us discuss another example suppose we

137
00:07:26.540 --> 00:07:29.450
want to implement this function a B plus

138
00:07:29.450 --> 00:07:32.570
C into the whole prime so you can see

139
00:07:32.570 --> 00:07:34.970
that first of all we will start

140
00:07:34.970 --> 00:07:37.790
construction of our pulldown network and

141
00:07:37.790 --> 00:07:41.240
we will use n Mo's transistors here so a

142
00:07:41.240 --> 00:07:44.270
B and C are in parallel so you can see

143
00:07:44.270 --> 00:07:47.600
here and this whole combination is in

144
00:07:47.600 --> 00:07:51.080
series with T in the pulldown network so

145
00:07:51.080 --> 00:07:54.680
similarly in the Polak Network a B and C

146
00:07:54.680 --> 00:07:57.350
will come in series and this whole

147
00:07:57.350 --> 00:08:00.380
combination will come in parallel with D

148
00:08:00.380 --> 00:08:03.530
transistor so here you can see we have

149
00:08:03.530 --> 00:08:06.200
used n Mo's transistor in our pulldown

150
00:08:06.200 --> 00:08:08.150
network and P Mo's transistor in our

151
00:08:08.150 --> 00:08:13.940
whole op network so here we can discuss

152
00:08:13.940 --> 00:08:16.270
another example suppose we have this

153
00:08:16.270 --> 00:08:21.800
function D plus a into BC whole prime so

154
00:08:21.800 --> 00:08:23.840
we want to implement this function so

155
00:08:23.840 --> 00:08:27.200
let's start with pulldown network first

156
00:08:27.200 --> 00:08:31.400
so B and C now you can see B and C they

157
00:08:31.400 --> 00:08:34.669
are in parallel so you can see here in

158
00:08:34.669 --> 00:08:36.080
the pulldown network they are in

159
00:08:36.080 --> 00:08:37.409
parallel and

160
00:08:37.409 --> 00:08:40.409
this bc combination is in series with

161
00:08:40.409 --> 00:08:43.610
transistor a so here you can see a

162
00:08:43.610 --> 00:08:46.200
transistor is in series with the

163
00:08:46.200 --> 00:08:50.520
combination of DC and then now this

164
00:08:50.520 --> 00:08:53.010
whole combination is in parallel with t

165
00:08:53.010 --> 00:08:56.190
so you can see this whole combination is

166
00:08:56.190 --> 00:08:58.950
in parallel with transistor T so we have

167
00:08:58.950 --> 00:09:02.160
used n Mo's transistor in our pulldown

168
00:09:02.160 --> 00:09:04.350
network so here you can get the output

169
00:09:04.350 --> 00:09:10.950
and so this is your pull-up network so

170
00:09:10.950 --> 00:09:16.490
now you can see B and C transistors were

171
00:09:16.490 --> 00:09:20.910
in parallel in pulldown network but in

172
00:09:20.910 --> 00:09:22.710
pull-up Network they will come in series

173
00:09:22.710 --> 00:09:27.330
so similarly this a transistor was in

174
00:09:27.330 --> 00:09:30.810
series with the combination of VC now it

175
00:09:30.810 --> 00:09:33.690
will come in parallel but with P Mo's

176
00:09:33.690 --> 00:09:35.670
transistor in pull-up Network so

177
00:09:35.670 --> 00:09:39.030
similarly this tree D transistor is in

178
00:09:39.030 --> 00:09:43.440
series with this whole combination so we

179
00:09:43.440 --> 00:09:45.660
have used n Mo's transistor in or

180
00:09:45.660 --> 00:09:48.720
pulldown network and P Mo's transistor

181
00:09:48.720 --> 00:09:50.790
in our pull-up network so here you can

182
00:09:50.790 --> 00:09:52.740
connect to the VDD and here you guy will

183
00:09:52.740 --> 00:09:55.830
connect ground and from here you can get

184
00:09:55.830 --> 00:09:59.000
your output so this is the standard

185
00:09:59.000 --> 00:10:02.280
procedure of implementation of any

186
00:10:02.280 --> 00:10:06.210
static CMOS circuit so here you can see

187
00:10:06.210 --> 00:10:12.080
we have basically four inputs here and

188
00:10:12.080 --> 00:10:15.630
we need eight number of transistors to

189
00:10:15.630 --> 00:10:18.600
implement this function so now you can

190
00:10:18.600 --> 00:10:24.090
see that for n input we need 2 n number

191
00:10:24.090 --> 00:10:28.490
of transistors to implement static CMOS

192
00:10:28.490 --> 00:10:37.620
functions so let's discuss the

193
00:10:37.620 --> 00:10:41.220
multiplexer so multiplexer in

194
00:10:41.220 --> 00:10:46.580
multiplexer we can basically select

195
00:10:46.580 --> 00:10:49.650
several input line to a single output

196
00:10:49.650 --> 00:10:53.610
line so this is the standard diagram of

197
00:10:53.610 --> 00:10:56.400
our multiplexer block level diagram so

198
00:10:56.400 --> 00:10:58.230
this is the slack line these are input

199
00:10:58.230 --> 00:11:00.900
and this is output so you can see there

200
00:11:00.900 --> 00:11:03.720
are several inputs but only one output

201
00:11:03.720 --> 00:11:07.050
so multi what multiplexer do it select

202
00:11:07.050 --> 00:11:13.410
one input line to single output line so

203
00:11:13.410 --> 00:11:16.380
we can have several inputs but only one

204
00:11:16.380 --> 00:11:21.680
output so it will basically select one

205
00:11:21.680 --> 00:11:28.440
input for the output so here you can see

206
00:11:28.440 --> 00:11:31.890
we can implement this multiplexer by

207
00:11:31.890 --> 00:11:34.620
using these see switches so here you can

208
00:11:34.620 --> 00:11:39.060
see this is we have used to see switches

209
00:11:39.060 --> 00:11:42.480
to implement our simple multiplexer so

210
00:11:42.480 --> 00:11:48.720
this is 2 into 1 multiplexer so dynamic

211
00:11:48.720 --> 00:11:52.470
CMOS in static circuit at every point in

212
00:11:52.470 --> 00:11:55.560
time the output is connected to either

213
00:11:55.560 --> 00:11:59.970
ground or VDD by a load resistor path so

214
00:11:59.970 --> 00:12:04.190
we need to n number of transistors to

215
00:12:04.190 --> 00:12:09.170
implement n number of inputs so n

216
00:12:09.170 --> 00:12:14.670
basically this n n type and n type so

217
00:12:14.670 --> 00:12:18.360
suppose we have two inputs here then we

218
00:12:18.360 --> 00:12:21.840
will need two n-type and two p-type

219
00:12:21.840 --> 00:12:24.570
transistors to implement this function

220
00:12:24.570 --> 00:12:27.960
so basically for the two inputs we need

221
00:12:27.960 --> 00:12:30.840
four transistor and suppose we have five

222
00:12:30.840 --> 00:12:33.090
inputs then we will require 10

223
00:12:33.090 --> 00:12:36.330
transistors to implement the function so

224
00:12:36.330 --> 00:12:40.020
in dynamic circuits basically what will

225
00:12:40.020 --> 00:12:43.680
happen we will require only n plus two

226
00:12:43.680 --> 00:12:50.370
transistors ok so suppose we have five

227
00:12:50.370 --> 00:12:53.490
inputs then we will require saml

228
00:12:53.490 --> 00:12:55.410
transistors to implement this function

229
00:12:55.410 --> 00:12:59.370
so the number of transistors produced in

230
00:12:59.370 --> 00:12:59.790
the

231
00:12:59.790 --> 00:13:05.130
dynamic CMOS so for efficient designing

232
00:13:05.130 --> 00:13:09.150
we need to keep less number of

233
00:13:09.150 --> 00:13:15.570
transistors so this is one example of

234
00:13:15.570 --> 00:13:19.710
dynamic gate so this is the standard

235
00:13:19.710 --> 00:13:23.570
procedure so here you can see we have

236
00:13:23.570 --> 00:13:28.710
used this P MOS transistor as this is

237
00:13:28.710 --> 00:13:32.010
the called the pre-charge and here we

238
00:13:32.010 --> 00:13:36.990
have used this n MOS transistor for

239
00:13:36.990 --> 00:13:42.150
evaluate function so here is your p DN

240
00:13:42.150 --> 00:13:44.640
pulldown network and this is the output

241
00:13:44.640 --> 00:13:48.330
capacitor so these are the inputs so to

242
00:13:48.330 --> 00:13:51.240
implement our function we will require

243
00:13:51.240 --> 00:13:54.390
only this PD N or pulldown network so

244
00:13:54.390 --> 00:13:59.190
this is basically the clock so here we

245
00:13:59.190 --> 00:14:01.800
have used this two transistor 1 P MOS

246
00:14:01.800 --> 00:14:05.310
and one n Mo's forever recharge and the

247
00:14:05.310 --> 00:14:08.310
value 8 function so what will happen

248
00:14:08.310 --> 00:14:12.300
when the clock will be 0 this transistor

249
00:14:12.300 --> 00:14:16.560
will turn on and this term transistor

250
00:14:16.560 --> 00:14:20.100
will turn off and it will pre charge the

251
00:14:20.100 --> 00:14:27.090
output and then the clock will be 1 it

252
00:14:27.090 --> 00:14:29.640
will turn off and it will turn on and

253
00:14:29.640 --> 00:14:33.230
your output capacitor will discharge

254
00:14:33.230 --> 00:14:37.080
this way so this is the standard

255
00:14:37.080 --> 00:14:40.140
procedure of implementation of dynamic

256
00:14:40.140 --> 00:14:45.870
logic so here you can see we have you

257
00:14:45.870 --> 00:14:49.050
can see we have this function here a B

258
00:14:49.050 --> 00:14:52.730
plus C Prime so here you can see maybe a

259
00:14:52.730 --> 00:14:59.010
are in series and this a B combination

260
00:14:59.010 --> 00:15:01.260
is in parallel with transistor C so this

261
00:15:01.260 --> 00:15:04.590
is here you can see this is the scenario

262
00:15:04.590 --> 00:15:08.370
and this is your pre charge and this is

263
00:15:08.370 --> 00:15:10.790
the value of transistor

264
00:15:10.790 --> 00:15:15.500
so you now you can see now we have three

265
00:15:15.500 --> 00:15:18.560
inputs and we require five transistors

266
00:15:18.560 --> 00:15:21.170
basically n plus two transistor

267
00:15:21.170 --> 00:15:25.120
transistors to implement the function so

268
00:15:25.120 --> 00:15:28.880
compared to static CMOS circuits the

269
00:15:28.880 --> 00:15:32.230
number of transistors is reduced in the

270
00:15:32.230 --> 00:15:37.850
dynamic CMOS logic so conditions on the

271
00:15:37.850 --> 00:15:41.330
output once the output of a dynamic it

272
00:15:41.330 --> 00:15:43.640
is discharged it cannot be charged again

273
00:15:43.640 --> 00:15:48.170
until the next recharge operation inputs

274
00:15:48.170 --> 00:15:51.080
through the gate can meet at most one

275
00:15:51.080 --> 00:15:54.430
transition during in the evaluation

276
00:15:54.430 --> 00:15:57.860
output can be in high impedance state

277
00:15:57.860 --> 00:16:02.840
during and after evaluation and your

278
00:16:02.840 --> 00:16:08.360
hold on network of state is stored on CL

279
00:16:08.360 --> 00:16:14.480
capacitor so logic function is

280
00:16:14.480 --> 00:16:17.890
implemented by polled on network only so

281
00:16:17.890 --> 00:16:22.730
for n number of inputs we need n plus

282
00:16:22.730 --> 00:16:24.680
two transistors to implement the

283
00:16:24.680 --> 00:16:29.030
function in our dynamic CMOS logic so in

284
00:16:29.030 --> 00:16:31.820
dynamic CMOS logic we have full-swing

285
00:16:31.820 --> 00:16:37.840
outputs from ground to VDD so these

286
00:16:37.840 --> 00:16:41.900
dynamic gates are non ratioed it means

287
00:16:41.900 --> 00:16:44.510
that the sizing of the devices it does

288
00:16:44.510 --> 00:16:49.490
not affect the logic levels so dynamic

289
00:16:49.490 --> 00:16:55.390
gates are faster in switching speeds

290
00:16:55.390 --> 00:16:59.980
obviously the power dissipation in

291
00:16:59.980 --> 00:17:03.560
dynamic CMOS logic is higher than the

292
00:17:03.560 --> 00:17:11.839
static CMOS so and also we need a pre

293
00:17:11.839 --> 00:17:14.869
charge and evaluate clock in our dynamic

294
00:17:14.869 --> 00:17:19.640
gates so this was the lecture for today

295
00:17:19.640 --> 00:17:23.240
and please if you have any question

296
00:17:23.240 --> 00:17:24.589
please don't has

297
00:17:24.589 --> 00:17:27.980
to contact me so thank you very much for

298
00:17:27.980 --> 00:17:31.510
today see you next time

